<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <!--<parent>-->
    <!--<groupId>org.springframework.boot</groupId>-->
    <!--<artifactId>spring-boot-starter-parent</artifactId>-->
    <!--<version>2.2.4.RELEASE</version>-->
    <!--<relativePath/> &lt;!&ndash; lookup parent from repository &ndash;&gt;-->
    <!--</parent>-->
    <groupId>com.godwinzh.air</groupId>
    <artifactId>mu-air-autoticket</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>jar</packaging>
    <properties>
        <java.version>1.8</java.version>
        <spring-cloud.version>Hoxton.SR2</spring-cloud.version>
        <commons-dependencies-3rd.version>0.1.1-SNAPSHOT</commons-dependencies-3rd.version>
        <commons-dependencies.version>0.1.1-SNAPSHOT</commons-dependencies.version>
    </properties>
    <dependencies>
        <dependency>
            <groupId>com.godwinzh.air</groupId>
            <artifactId>air-core-entity</artifactId>
            <version>0.1.1-SNAPSHOT</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <optional>true</optional>
        </dependency>
        <!--需要引入该jar才能使bootstrap配置文件生效-->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-context</artifactId>
        </dependency>
        <!--<dependency>-->
        <!--<groupId>org.springframework.boot</groupId>-->
        <!--<artifactId>spring-boot-starter-aop</artifactId>-->
        <!--</dependency>-->
        <!--<dependency>-->
        <!--<groupId>org.springframework.boot</groupId>-->
        <!--<artifactId>spring-boot-starter-jdbc</artifactId>-->
        <!--</dependency>-->
        <dependency>
            <groupId>org.seleniumhq.selenium</groupId>
            <artifactId>selenium-java</artifactId>
            <version>3.4.0</version>
        </dependency>
        <dependency>
            <groupId>com.godwinzh</groupId>
            <artifactId>commons-api-entity</artifactId>
        </dependency>
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>23.0</version>
        </dependency>
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>2.8.2</version>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
        </dependency>
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
            <version>1.2.62</version>
        </dependency>
    </dependencies>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>2.2.4.RELEASE</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>com.godwinzh</groupId>
                <artifactId>commons-dependencies-3rd</artifactId>
                <version>${commons-dependencies-3rd.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>com.godwinzh</groupId>
                <artifactId>commons-dependencies</artifactId>
                <version>${commons-dependencies.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>


    <build>
        <plugins>
            <plugin>
                <!-- 指定项目编译时的java版本和编码方式 -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.7.0</version>
                <configuration>
                    <target>1.8</target>
                    <source>1.8</source>
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>3.1.0</version>
                <configuration>
                    <archive>
                        <manifest>
                            <mainClass>com.godwinzh.air.muautoticket.Application</mainClass> <!-- 指定入口类路径 -->
                        </manifest>
                    </archive>
                    <descriptorRefs>
                        <descriptorRef>jar-with-dependencies
                        </descriptorRef> <!-- jar包后缀，生成的jar包形式为：project-1.0-SNAPSHOT-jar-with-dependencies.jar -->
                    </descriptorRefs>
                </configuration>
                <!-- 添加此项后，可直接使用mvn package | mvn install -->
                <!-- 不添加此项，需直接使用mvn package assembly:single -->
                <executions>
                    <execution>
                        <id>make-assembly</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>


    <!--#######################################-->
    <!--将依赖jar包输出到指定目录
    该方法打包的jar，指定了入口类，可以直接使用java -jar project.jar执行，
    但是第三方依赖存在一个指定的外部目录下，迁移时需将jar和依赖目录一起迁移。-->
    <!--<build>-->
    <!--<plugins>-->
    <!--<plugin>-->
    <!--&lt;!&ndash; 指定项目编译时的java版本和编码方式 &ndash;&gt;-->
    <!--<groupId>org.apache.maven.plugins</groupId>-->
    <!--<artifactId>maven-compiler-plugin</artifactId>-->
    <!--<version>3.7.0</version>-->
    <!--<configuration>-->
    <!--<target>1.8</target>-->
    <!--<source>1.8</source>-->
    <!--<encoding>UTF-8</encoding>-->
    <!--</configuration>-->
    <!--</plugin>-->
    <!--<plugin>-->
    <!--<groupId>org.apache.maven.plugins</groupId>-->
    <!--<artifactId>maven-jar-plugin</artifactId>-->
    <!--<version>3.1.0</version>-->
    <!--<configuration>-->
    <!--<archive>-->
    <!--<manifest>-->
    <!--<mainClass>Application</mainClass> &lt;!&ndash; 指定入口类 &ndash;&gt;-->
    <!--<addClasspath>true</addClasspath> &lt;!&ndash; 在jar的MF文件中生成classpath属性 &ndash;&gt;-->
    <!--<classpathPrefix>lib/</classpathPrefix> &lt;!&ndash; classpath前缀,即依赖jar包的路径 &ndash;&gt;-->
    <!--</manifest>-->
    <!--</archive>-->
    <!--</configuration>-->
    <!--</plugin>-->
    <!--<plugin>-->
    <!--<groupId>org.apache.maven.plugins</groupId>-->
    <!--<artifactId>maven-dependency-plugin</artifactId>-->
    <!--<version>3.1.1</version>-->
    <!--<executions>-->
    <!--<execution>-->
    <!--<id>copy</id>-->
    <!--<phase>install</phase>-->
    <!--<goals>-->
    <!--<goal>copy-dependencies</goal>-->
    <!--</goals>-->
    <!--<configuration>-->
    <!--&lt;!&ndash; 指定依赖包的输出路径，需与上方的classpathPrefix保持一致 &ndash;&gt;-->
    <!--<outputDirectory>${project.build.directory}/lib</outputDirectory>-->
    <!--</configuration>-->
    <!--</execution>-->
    <!--</executions>-->
    <!--</plugin>-->
    <!--</plugins>-->
    <!--</build>-->
</project>